From 6e7b6a3851c987ad0253cd9166dd1b22b9643401 Mon Sep 17 00:00:00 2001
From: Spencer Sharkey <spencer@sf-n.com>
Date: Thu, 23 May 2019 00:45:00 -0700
Subject: [PATCH] UPLOL tick animals less frequently


diff --git a/src/main/java/net/minecraft/server/EntityAnimal.java b/src/main/java/net/minecraft/server/EntityAnimal.java
index a7481df5f..de2f4c472 100644
--- a/src/main/java/net/minecraft/server/EntityAnimal.java
+++ b/src/main/java/net/minecraft/server/EntityAnimal.java
@@ -24,6 +24,9 @@ public abstract class EntityAnimal extends EntityAgeable implements IAnimal {
     }
 
     public void movementTick() {
+        if (ticksLived > 2 && ticksLived % 3 == 0) {
+            return;
+        }
         super.movementTick();
         if (this.getAge() != 0) {
             this.bC = 0;
diff --git a/src/main/java/net/minecraft/server/EntityHorse.java b/src/main/java/net/minecraft/server/EntityHorse.java
index 1b9425f3e..b5b912b3a 100644
--- a/src/main/java/net/minecraft/server/EntityHorse.java
+++ b/src/main/java/net/minecraft/server/EntityHorse.java
@@ -114,6 +114,9 @@ public class EntityHorse extends EntityHorseAbstract {
     }
 
     public void tick() {
+        if (ticksLived > 2 && ticksLived % 6 == 0) {
+            return;
+        }
         super.tick();
         if (this.world.isClientSide && this.datawatcher.a()) {
             this.datawatcher.e();
diff --git a/src/main/java/net/minecraft/server/EntityHorseAbstract.java b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
index 953277631..9dddee8be 100644
--- a/src/main/java/net/minecraft/server/EntityHorseAbstract.java
+++ b/src/main/java/net/minecraft/server/EntityHorseAbstract.java
@@ -517,6 +517,9 @@ public abstract class EntityHorseAbstract extends EntityAnimal implements IInven
     }
 
     public void tick() {
+        if (ticksLived > 2 && ticksLived % 6 == 0) {
+            return;
+        }
         super.tick();
         if (this.bQ > 0 && ++this.bQ > 30) {
             this.bQ = 0;
diff --git a/src/main/java/net/minecraft/server/EntityInsentient.java b/src/main/java/net/minecraft/server/EntityInsentient.java
index d1ec201d8..4568c7825 100644
--- a/src/main/java/net/minecraft/server/EntityInsentient.java
+++ b/src/main/java/net/minecraft/server/EntityInsentient.java
@@ -258,11 +258,17 @@ public abstract class EntityInsentient extends EntityLiving {
     }
 
     public void tick() {
+        // start uplol - Tick InsentientEntities every 5th tick
+        if (ticksLived > 2 && ticksLived % 6 == 0) {
+            return;
+        }
+        // end uplol
+
         super.tick();
         if (isTypeNotPersistent() && hasBeenCounted == this.isPersistent()) ((com.destroystokyo.paper.PaperWorldEntityList) this.world.entityList).updateEntityCount(this, hasBeenCounted ? -1 : 1); // Paper - adjust count if persistence state changes
         if (!this.world.isClientSide) {
             this.dl();
-            if (this.ticksLived % 5 == 0) {
+            if (this.ticksLived % 10 == 0) {
                 boolean flag = !(this.bO() instanceof EntityInsentient);
                 boolean flag1 = !(this.getVehicle() instanceof EntityBoat);
 
diff --git a/src/main/java/net/minecraft/server/EntityLiving.java b/src/main/java/net/minecraft/server/EntityLiving.java
index 4d5459d24..e36729657 100644
--- a/src/main/java/net/minecraft/server/EntityLiving.java
+++ b/src/main/java/net/minecraft/server/EntityLiving.java
@@ -2103,6 +2103,7 @@ public abstract class EntityLiving extends Entity {
         super.tick();
         this.cV();
         this.o();
+
         if (!this.world.isClientSide) {
             int i = this.getArrowCount();
 
diff --git a/src/main/java/net/minecraft/server/EntityTurtle.java b/src/main/java/net/minecraft/server/EntityTurtle.java
index 270b95082..b023533a6 100644
--- a/src/main/java/net/minecraft/server/EntityTurtle.java
+++ b/src/main/java/net/minecraft/server/EntityTurtle.java
@@ -230,6 +230,9 @@ public class EntityTurtle extends EntityAnimal {
     }
 
     public void movementTick() {
+        if (ticksLived > 2 && ticksLived % 8 == 0) {
+            return;
+        }
         super.movementTick();
         if (this.dz() && this.bK >= 1 && this.bK % 5 == 0) {
             BlockPosition blockposition = new BlockPosition(this);
diff --git a/src/main/java/net/minecraft/server/EntityZombie.java b/src/main/java/net/minecraft/server/EntityZombie.java
index bf2bed002..5bd7d3203 100644
--- a/src/main/java/net/minecraft/server/EntityZombie.java
+++ b/src/main/java/net/minecraft/server/EntityZombie.java
@@ -42,7 +42,6 @@ public class EntityZombie extends EntityMonster {
     public EntityZombie(World world) {
         this(EntityTypes.ZOMBIE, world);
     }
-
     protected void n() {
         this.goalSelector.a(4, new EntityZombie.a(Blocks.TURTLE_EGG, this, 1.0D, 3));
         this.goalSelector.a(5, new PathfinderGoalMoveTowardsRestriction(this, 1.0D));
@@ -160,6 +159,9 @@ public class EntityZombie extends EntityMonster {
     }
 
     public void tick() {
+        if (ticksLived > 2 && ticksLived % 3 == 0) {
+            return;
+        }
         if (!this.world.isClientSide) {
             // CraftBukkit start - Use wall time instead of ticks for conversion
             if (this.isDrownConverting() && this.isAlive()) {
-- 
2.17.1

